apiVersion: k8s.keycloak.org/v2alpha1
kind: Keycloak
metadata:
  labels:
    app: keycloak
  name: keycloak
  namespace: {{ .Values.namespace }}
spec:
  hostname:
    hostname: keycloak.{{ .Values.hostname }}
  db:
    vendor: postgres
    url: jdbc:postgresql://postgres:5432/keycloak
    poolMinSize: {{ .Values.dbPoolMinSize }}
    poolMaxSize: {{ .Values.dbPoolMaxSize }}
    poolInitialSize: {{ .Values.dbPoolInitialSize }}
    usernameSecret:
      name: keycloak-db-secret
      key: username
    passwordSecret:
      name: keycloak-db-secret
      key: password
  additionalOptions:
    - name: log-console-output
      value: json
    - name: metrics-enabled
      value: 'true'
    - name: health-enabled
      value: 'true'
    # necessary as Grafana doesn't support id_token_hints for logout, yet
    # https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/keycloak/
    - name: spi-login-protocol-openid-connect-legacy-logout-redirect-uri
      value: 'true'
  http:
    tlsSecret: keycloak-tls-secret
  instances: {{ .Values.instances }}
  ingress:
    enabled: false
  unsupported:
    podTemplate:
      metadata:
        annotations:
          checksum/config: {{ include (print $.Template.BasePath "/postgres/postgres-deployment.yaml") . | sha256sum }}-{{ include (print $.Template.BasePath "/keycloak-tls-secret.yaml") . | sha256sum }}
      spec:
        containers:
          -
            env:
              - name: JAVA_OPTS_APPEND
                # using non-blocking random, make DNS lookups expire after 10 seconds and not cache them forever
                value: >
                  -Djava.security.egd=file:/dev/urandom -Dnetworkaddress.cache.ttl=10 -XX:+ExitOnOutOfMemoryError
                  -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8787
            startupProbe:
              httpGet:
                path: /health/ready
                port: 8443
                scheme: HTTPS
              failureThreshold: 600
              initialDelaySeconds: 10
              periodSeconds: 2
            readinessProbe:
              httpGet:
                path: /health/ready
                port: 8443
                scheme: HTTPS
              failureThreshold: 10
              periodSeconds: 10
            livenessProbe:
              httpGet:
                path: /health/live
                port: 8443
                scheme: HTTPS
              failureThreshold: 10
              periodSeconds: 10
            ports:
              - containerPort: 8787
                protocol: TCP
                name: jvmdebug
