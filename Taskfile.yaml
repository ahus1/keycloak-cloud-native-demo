# https://taskfile.dev

version: '3'

output: prefixed

vars:
  IP:
    sh: minikube ip
  KC_DB_POOL_INITIAL_SIZE: '{{default "5" .KC_DB_POOL_INITIAL_SIZE}}'
  KC_DB_POOL_MAX_SIZE: '{{default "10" .KC_DB_POOL_MAX_SIZE}}'
  KC_DB_POOL_MIN_SIZE: '{{default "5" .KC_DB_POOL_MIN_SIZE}}'
  KC_TAG: '{{default "21.0.2" .KC_TAG}}'
  KC_INSTANCES: '{{default "1" .KC_INSTANCES}}'

dotenv: ['.env']

tasks:
  default:
    deps:
      - grafana-client-in-keycloak
    cmds:
      - echo Keycloak is ready!
      - bash -c ./isup.sh
    silent: true

  ipchange:
    deps:
      - split
    cmds:
      - rm -f .task/checksum/keycloak
      - rm -f .task/checksum/prometheus
      - rm -f .task/checksum/monitoring
      - mkdir -p .task
      - echo -n {{.IP}} > .task/status-{{.TASK}}
    sources:
      - .task/subtask-{{.TASK}}.yaml
    status:
      - test -e .task/status-{{.TASK}}
      - test "{{.IP}}" == "$(cat .task/status-{{.TASK}})"
    # avoid 'once' until https://github.com/go-task/task/issues/715 when running with parameter '-C 1'
    run: once

  reset-keycloak:
    deps:
      - split
    cmds:
      - bash -c "kubectl delete deployment/postgres -n keycloak || exit 0"
      - bash -c "kubectl delete keycloak/keycloak -n keycloak || exit 0"
      - bash -c "kubectl delete deployment/keycloak-operator -n keycloak || exit 0"
      - rm -f .task/checksum/keycloak
      - task: default

  split:
    desc: Split Taskfile to one-file-per-task for dirty checking
    # avoid 'once' until https://github.com/go-task/task/issues/715 when running with parameter '-C 1'
    run: once
    cmds:
      - bash -c ./split.sh
    sources:
      - Taskfile.yaml
      - split.sh
    silent: true

  env:
    cmds:
      # create marker files that can then be checked in other tasks
      - mkdir -p .task
      - echo {{.KC_DB_POOL_INITIAL_SIZE}} > .task/var-KC_DB_POOL_INITIAL_SIZE
      - echo {{.KC_DB_POOL_MAX_SIZE}} > .task/var-KC_DB_POOL_MAX_SIZE
      - echo {{.KC_DB_POOL_MIN_SIZE}} > .task/var-KC_DB_POOL_MIN_SIZE
      - echo {{.KC_TAG}} > .task/var-KC_TAG
    run: once
    sources:
      - .task/subtask-{{.TASK}}.yaml
    status:
      - test "{{.KC_DB_POOL_INITIAL_SIZE}}" == "$(cat .task/var-KC_DB_POOL_INITIAL_SIZE)"
      - test "{{.KC_DB_POOL_MAX_SIZE}}" == "$(cat .task/var-KC_DB_POOL_MAX_SIZE)"
      - test "{{.KC_DB_POOL_MIN_SIZE}}" == "$(cat .task/var-KC_DB_POOL_MIN_SIZE)"
      - test "{{.KC_TAG}}" == "$(cat .task/var-KC_TAG)"

  tls:
    deps:
      - split
      - ipchange
    cmds:
      - openssl req -x509 -newkey rsa:4096 -keyout keycloak/config/cert/tls.key -out keycloak/config/cert/tls.crt -sha256 -days 365 -subj '/CN=keycloak.keycloak' -addext "subjectAltName=DNS:*.{{.IP}}.nip.io,IP:{{.IP}}" -nodes
      - rm -f keycloak/config/cert/tls.p12
      - keytool -import -alias keycloak -keypass changeit -storepass changeit -noprompt -file keycloak/config/cert/tls.crt -keystore keycloak/config/cert/tls.p12
    generates:
      - keycloak/config/cert/tls.crt
      - keycloak/config/cert/tls.key
    sources:
      - .task/subtask-{{.TASK}}.yaml
      - .task/status-ipchange

  prometheus:
    deps:
      - split
      - ipchange
      - env
    cmds:
      - kubectl create namespace monitoring || true || true
      - helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      - helm repo update
      - >
        helm upgrade --install prometheus prometheus-community/kube-prometheus-stack --version 39.11.0 -f monitoring.yaml 
        --set grafana."grafana\.ini".server.root_url=http://grafana.{{.IP}}.nip.io 
        --set grafana."grafana\.ini"."auth\.generic_oauth".auth_url=https://keycloak.{{.IP}}.nip.io/realms/master/protocol/openid-connect/auth
        --set grafana."grafana\.ini"."auth\.generic_oauth".token_url=https://keycloak.{{.IP}}.nip.io/realms/master/protocol/openid-connect/token
        --set grafana."grafana\.ini"."auth\.generic_oauth".api_url=https://keycloak.{{.IP}}.nip.io/realms/master/protocol/openid-connect/userinfo
        --set grafana."grafana\.ini".auth.signout_redirect_url=https://keycloak.{{.IP}}.nip.io/realms/master/protocol/openid-connect/logout?client_id=grafana\&redirect_uri=http%3A%2F%2Fgrafana.{{.IP}}.nip.io%2Flogin
    sources:
      - monitoring.yaml
      - .task/subtask-{{.TASK}}.yaml
      - .task/var-KB_RETENTION
    run: once

  monitoring:
    deps:
      - prometheus
      - split
      - ipchange
    cmds:
      - helm upgrade --install monitoring --set hostname={{.IP}}.nip.io monitoring
    sources:
      - monitoring/**/*.*
      - .task/subtask-{{.TASK}}.yaml

  keycloak-cli-download:
    deps:
      - split
    cmds:
      - mkdir -p keycloak-cli
      - curl -L -f https://github.com/keycloak/keycloak/releases/download/{{.KC_TAG}}/keycloak-{{.KC_TAG}}.zip -o keycloak-cli/keycloak.zip --etag-save .task/keycloak-cli-download-etag --etag-compare .task/keycloak-cli-download-etag
    generates:
      - keycloak-cli/keycloak.zip
      - .task/keycloak-cli-download-etag
    sources:
      - .task/subtask-{{.TASK}}.yaml
      - .task/var-KC_TAG

  keycloak-cli-unzip:
    deps:
      - keycloak-cli-download
      - split
    cmds:
      # remove temporary folders to be extra safe
      - rm -rf keycloak-cli/keycloak-{{.KC_TAG}}
      - rm -rf keycloak-cli/keycloak
      - unzip -o -q keycloak-cli/keycloak.zip -d keycloak-cli
      # the output folder depends on the version we're about to unpack
      - mv keycloak-cli/keycloak-{{.KC_TAG}} keycloak-cli/keycloak
    sources:
      - keycloak-cli/keycloak.zip
      - minikube/.task/subtask-{{.TASK}}.yaml
      - .task/var-KC_TAG

  keycloak:
    deps:
      - monitoring
      - split
      - ipchange
      - env
      - tls
    cmds:
      - kubectl create namespace keycloak || true
      - kubectl -n keycloak apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/refs/tags/{{.KC_TAG}}/kubernetes/keycloaks.k8s.keycloak.org-v1.yml
      - kubectl -n keycloak apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/refs/tags/{{.KC_TAG}}/kubernetes/keycloakrealmimports.k8s.keycloak.org-v1.yml
      - kubectl -n keycloak apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/refs/tags/{{.KC_TAG}}/kubernetes/kubernetes.yml || (kubectl -n keycloak delete deployment/keycloak-operator && kubectl -n keycloak apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/refs/tags/{{.KC_TAG}}/kubernetes/kubernetes.yml)
      - >
        helm upgrade --install keycloak
        --set hostname={{.IP}}.nip.io
        --set dbPoolInitialSize={{.KC_DB_POOL_INITIAL_SIZE}}
        --set dbPoolMinSize={{.KC_DB_POOL_MIN_SIZE}}
        --set dbPoolMaxSize={{.KC_DB_POOL_MAX_SIZE}}
        --set instances={{ .KC_INSTANCES }}
        keycloak
      # kill all CrashLoopBackOff and ImagePullBackOff pods to trigger a fast restart and not wait Kubernetes
      - bash -c 'kubectl get pods -A | grep -E "(BackOff|Error|ErrImageNeverPull|InvalidImageName)" | tr -s " " | cut -d" " -f1-2 | xargs -r -L 1 kubectl delete pod -n'
      # wait a bit for the operator to pick up the changes
      - bash -c 'sleep 1'
      - ./isup.sh
      # remove all no longer used images from minikube to preserve disk space
      - minikube ssh -- docker container prune -f
      - minikube ssh -- docker volume prune -f
    sources:
      - keycloak/**/*.*
      - .task/subtask-{{.TASK}}.yaml
      - .task/var-KC_*

  grafana-client-in-keycloak:
    deps:
      - keycloak
      - keycloak-cli-unzip
    cmds:
      - ./setup-grafana-in-keycloak.sh
    sources:
      - /setup-grafana-in-keycloak.sh
      - .task/subtask-{{.TASK}}.yaml
